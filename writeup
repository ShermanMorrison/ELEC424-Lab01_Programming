Lab01:         Programming         in         a         Linux        Environment
Jonathan                                                                  Wilson

Part                                                                           1

Q1.   What   were   the   arguments   passed   to  the  chmod  command  in  (3)?

chmod                             751                             justifytext.py

Q2.  Copy-paste  the directories in your path, and the contents of the directory
where   you   placed   the   symbolic   link   as   printed   out   by   ls  -l.


$PATH                 =                /usr/local/sbin:/usr/local/bin:/usr/sbin:
/usr/bin:/sbin:/bin:/usr/games:/usr/local/games

I  put  it  in /bin, which has a lot of files, so here I am only showing some of
the                  files                  around                  justifytext.

ls                        -l                        /bin                       =
.
.
.
-rwxr-xr-x      1      root      root     94048     Jan     10     2014     gzip
-rwxr-xr-x     1     root     root     14736     Dec     13     2013    hostname
-rwxr-xr-x      1      root      root      307328     Feb     17     2014     ip
lrwxrwxrwx     1    root    root    63    Sep    4    13:48    justifytext    ->
/home/jonathan/ELEC424/ELEC424-Lab01_Programming/justifytext.py
-rwxr-xr-x     1     root     root     10480     Feb     18     2013    kbd_mode
-rwxr-xr-x      1      root      root      23088     Jan     6     2014     kill
-rwxr-xr-x      1     root     root     154616     Apr     10     09:07     kmod
-rwxr-xr-x      1      root     root     153664     Jun     10     2013     less
.
.
.

Part                                                                           2

Q3.     What     operations     are     done     on     the    input    integer?

It  is  shifted  to  the  right by one bit, the last 4 bits are masked, and then
it       is       shifted       to       the      left      by      4      bits.

Q4.  What  is  the  present  bug,  and  under  what  conditions is it triggered?

A  segmentation  fault  occurs  if  the  input  integer,  after being rounded to
thenearest  even  integer  below  it,  modulo'd  by 16, and multiplied by 16, is
greater  than  128.  This  is  because the code in CHECK attempts to overwrite a
string       literal,       which       is       in       read-only      memory.

Q5.      What      are      possible      ways      to     fix     this     bug?
One  good  way to fix the bug, and still have x be a rewritable string, would be
to    have    x    point    to    space    in   memory   supplied   by   malloc.

Part                                                                           3

Q6.    What    is   the   maximum   length   array   our   program   can   sort?
MAX_NUM                is                set               to               100.

Q7.  What is the difference between incrementing int* and char* by 1 (i.e. ((int
*)p)+1)                   vs                   ((char                  *)p)+1))?
Incrementing  a  pointer in C causes the value of the pointer to increase by the
number  of bytes of the data that the pointer is referencing. So for (int *), "+
1"  will increase p's value by 4, but for (char *) it will increase p's value by
1.

Q8.   Are  the  input  arrays  passed  by  reference  or  value  to  merge_sort?
By  value.  That's why we have to pass pointers to functions that we want to use
to                      modify                     our                     data.

Q9.  What is the difference between #include "header.h" and #include <header.h>?
#include  "header.h" is used for user defined headers, while #include <header.h>
is           used           for           C           standard          headers.

Q10.  Use  your justifytext script to justify this writeup (after completing it)
to            a           length           of           80           characters.
No                                                                      problem!
